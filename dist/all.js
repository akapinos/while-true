!function t(o,a,i){function s(n,e){if(!a[n]){if(!o[n]){var r="function"==typeof require&&require;if(!e&&r)return r(n,!0);if(d)return d(n,!0);throw(e=new Error("Cannot find module '"+n+"'")).code="MODULE_NOT_FOUND",e}r=a[n]={exports:{}},o[n][0].call(r.exports,function(e){return s(o[n][1][e]||e)},r,r.exports,t,o,a,i)}return a[n].exports}for(var d="function"==typeof require&&require,e=0;e<i.length;e++)s(i[e]);return s}({1:[function(t,e,n){e.exports=()=>{const e=t("../shaders/background.vert"),n=t("../shaders/background.frag");let r=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2,1,1),new THREE.ShaderMaterial({vertexShader:e(),fragmentShader:n()}));return r.material.depthWrite=!1,r.renderOrder=0,r}},{"../shaders/background.frag":5,"../shaders/background.vert":6}],2:[function(i,e,n){e.exports=()=>{const e=i("../shaders/heart.vert"),n=i("../shaders/heart.frag");let r=[];for(let e=-1.8;e<=1.8;e+=18e-5)r.push(new THREE.Vector3(e,0,0));var t=(new THREE.BufferGeometry).setFromPoints(r),o=new THREE.ShaderMaterial({uniforms:{aVal:{value:25}},linewidth:2,vertexShader:e(),fragmentShader:n()});const a=new THREE.Line(t,o);return a.renderOrder=1,a}},{"../shaders/heart.frag":7,"../shaders/heart.vert":8}],3:[function(e,c,v){{const a=e("./background"),f=e("./heart"),p=e("./sprite"),i=new THREE.Scene;var e=window.innerWidth,n=window.innerHeight,r=window.innerWidth/window.innerHeight;const s=new THREE.PerspectiveCamera(60,r,1,1e3),d=(s.position.set(0,0,5),new THREE.WebGLRenderer({antialias:!0})),u=(d.setSize(e,n),document.body.appendChild(d.domElement),f());var t=a(),o=p();i.add(u),i.add(t),i.add(o);const l=new THREE.Clock;return window.addEventListener("resize",(t=e,o=n,s.aspect=r,s.updateProjectionMatrix(),void d.setSize(t,o))),void d.setAnimationLoop(()=>{var e,n,r;u.material.uniforms.aVal.value=(e=-30,n=30,r=.5*Math.sin(.15*l.getElapsedTime())+.5,e*(1-r)+n*r),d.render(i,s)})}},{"./background":1,"./heart":2,"./sprite":4}],4:[function(e,n,r){n.exports=e=>{var n=(new THREE.TextureLoader).load("assets/while.webp"),n=new THREE.SpriteMaterial({map:n});const r=new THREE.Sprite(n);return r.position.set(0,-1.2),r.scale.set(1.5,1.5),r}},{}],5:[function(e,n,r){n.exports=function(e){var n,r="varying vec2 vUv; \n \nvec3 background(vec2 uv) \n{ \n  uv -= 0.5; \n  uv.y -= 0.15; \n     \n  float d = length(uv); \n  return mix(vec3(0.1515, 0.1375, 0.455), vec3(0.055, 0.0415, 0.225), d);    \n} \n \nvoid main(){ \n  gl_FragColor = vec4(background(vUv), 1.0); \n} \n \n";for(n in e=e||{})var t=new RegExp("{{"+n+"}}","g"),r=r.replace(t,e[n]);return r}},{}],6:[function(e,n,r){n.exports=function(e){var n,r="varying vec2 vUv; \n \nvoid main(){ \n  vUv = uv; \n  float depth = 1.; \n  gl_Position = vec4(position.xy, depth, 1.); \n} \n \n";for(n in e=e||{})var t=new RegExp("{{"+n+"}}","g"),r=r.replace(t,e[n]);return r}},{}],7:[function(e,n,r){n.exports=function(e){var n,r="void main() \n{ \n  gl_FragColor = vec4( 1., 0., 0., 1.0 ); \n} \n \n";for(n in e=e||{})var t=new RegExp("{{"+n+"}}","g"),r=r.replace(t,e[n]);return r}},{}],8:[function(e,n,r){n.exports=function(e){var n,r="#define PI radians(180.0) \n   \nuniform float aVal; \n     \nfloat heart(float x, float t){ \n  return pow(abs(0.45*x), 0.7)+0.5 + sqrt(0.6*(3.0-x*x))*(-cos(t * PI * x)); \n} \n     \nvoid main() \n{ \n  vec3 pos = position; \n  pos.y = 1.0 + heart(pos.x, aVal); \n  pos *= 0.8; \n  vec4 mvPosition = modelViewMatrix * vec4( pos, 1.0 ); \n  gl_Position = projectionMatrix * mvPosition; \n} \n \n";for(n in e=e||{})var t=new RegExp("{{"+n+"}}","g"),r=r.replace(t,e[n]);return r}},{}]},{},[3]);